"""
Django settings for django_booking project.

Generated by 'django-admin stapiprtproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import sys
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/


# <neo> [Generate secret key]
# SECRET_KEY = 'django-insecure-e&39r1ge6c*2jmr=0^10k-%!0l7%270d#youw*b9lj)ggi3v)1'
# <\old>
# <new>
def generate_secret_key (filepath):
    from django.core.management.utils import get_random_secret_key
    
    secret_key_file = open(filepath, "w")
    secret_key = 'SECRET_KEY= "' + get_random_secret_key() + '"\n'
    secret_key_file.write(secret_key)
    secret_key_file.close()


try:
    from settings_secret_key import SECRET_KEY
except ImportError:
    import os
    SETTINGS_DIR = os.path.abspath(os.path.dirname(__file__))
    generate_secret_key(os.path.join(SETTINGS_DIR, 'settings_secret_key.py'))
    
    from settings_secret_key import SECRET_KEY
# <\neo>

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'djTaskBrocker'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

#WSGI_APPLICATION = 'MDP_39jnu6.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases


# <neo> [Generate databases]
# DATABASES =
# <\old>
# <new>
def generate_databases(filepath):
    databases_file = open(filepath, "w");

    databases = "DATABASES = { 'default': { " + '\n';
    databases = databases + "'ENGINE': 'django.db.backends.sqlite3'," + '\n';
    databases = databases + "#'ENGINE': 'django.db.backends.postgresql'," + '\n';
    databases = databases + "#'HOST': 'localhost'," + '\n';
    databases = databases + "#'NAME': ''," + '\n';
    databases = databases + "'NAME': BASE_DIR / 'db.sqlite3'" + '\n';
    databases = databases + "#'USER': ''," + '\n';
    databases = databases + "#'PASSWORD': ''" + '\n';
    databases = databases + "}}";
    databases_file.write(databases);
    databases_file.close();
try:
    from settings_databases import DATABASES
except ImportError:
    import os

    SETTINGS_DATABASES_DIR = os.path.abspath(os.path.dirname(__file__))
    generate_databases(os.path.join(SETTINGS_DATABASES_DIR, 'settings_databases.py'))

    from settings_databases import DATABASES
# <\neo>


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

#USE_TZ = True
USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

SITE_PATH = os.path.abspath(os.path.dirname(__file__))
PROJECT_PATH = os.path.normpath(os.path.join(SITE_PATH, '..'))
SRC_PATH = os.path.join(PROJECT_PATH, 'src')
if SRC_PATH not in sys.path:
    sys.path.insert(0, SRC_PATH)